file,line,highlighted_element,offset,length,module,problem_class,entry_point,description
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,35,"print('{}.{} : {}'.format(func.__module__, func.__name__, end - start))",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,76,self.init_token_dict(self.vocab_path),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,82,"self.char_to_int = dict((c, i + 2) for i, c in enumerate(alphabet))",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,83,self.char_to_int['<pad>'] = 0,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,84,self.char_to_int['<unk>'] = 1,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,85,"self.int_to_char = dict((i, c) for c, i in self.char_to_int.items())",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,91,vocab.append(line.rstrip('\n')),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,92,"self.token_2_id = {row: index + 8 for index, row in enumerate(vocab)}",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,93,self.token_2_id['<PAD>'] = 0,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,94,self.token_2_id['<UNK>'] = 1,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,95,self.token_2_id['<ID>'] = 2,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,96,self.token_2_id['<PUN>'] = 3,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,97,self.token_2_id['<NUM>'] = 4,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,98,self.token_2_id['<STR>'] = 5,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,99,self.token_2_id['<SPE>'] = 6,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,100,self.token_2_id['<COM>'] = 7,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,101,"self.id_2_token = {v: k for k, v in self.token_2_id.items()}",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,118,self.lstm_model_character = tf.keras.models.load_model(self.model_charactor_path),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,119,self.lstm_model_token = tf.keras.models.load_model(self.model_token_path),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,136,sharps.append(line.strip('\n')),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\codeclf\testfile.py,225,tuple_list = self.gather_sharp_data(self.get_pyfile_path(self.root_path)),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\django-master\django\contrib\auth\tokens.py,19,self.algorithm = self.algorithm or 'sha256',0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\django-master\docs\conf.py,15,"pickle.dump(doctree, f, pickle.HIGHEST_PROTOCOL)",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\django-master\tests\gis_tests\geos_tests\test_mutable_list.py,29,self._list = self._mytype(items),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\django-master\tests\httpwrappers\tests.py,389,'\xde\x9e' == unichr(1950).encode(),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\asv_bench\benchmarks\tslibs\tz_convert.py,29,dti.tz_localize(None),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\asv_bench\benchmarks\tslibs\tz_convert.py,41,"dti.tz_localize(tz, ambiguous=""NaT"", nonexistent=""NaT"")",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\doc\source\conf.py,27,"pickle.dump(doctree, f, pickle.HIGHEST_PROTOCOL)",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\core\arrays\sparse\scipy_sparse.py,43,"labels_to_i = ss.groupby(level=levels, sort=sort_labels).first()",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\core\computation\pytables.py,326,"self.condition = ""~(%s)"" % self.condition",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\core\internals\managers.py,410,obj.axes[-1].equals(self.items),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\io\pytables.py,3519,"meta = ""category"" if md is not None else None",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\test_expressions.py,113,"self.run_binary(df.iloc[:, i], binary_comp)",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\arrays\categorical\test_constructors.py,188,vals = np.asarray(cat[cat.notna()]),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\arrays\sparse\test_array.py,435,"tm.assert_numpy_array_equal(arr.sp_values, np.asarray(arr))",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\arrays\sparse\test_array.py,463,"tm.assert_numpy_array_equal(arr.sp_values, np.asarray(arr))",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\arrays\sparse\test_array.py,1136,(2 * 8) + 2 * 4,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\extension\test_sparse.py,349,assert not comp.any(),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\extension\base\casting.py,26,cmp = result.dtypes.equals(df.dtypes),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\extension\base\getitem.py,234,import pandas._testing as tm,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\extension\decimal\array.py,62,self._values = self.values = self.data,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\extension\json\array.py,61,self._values = self.values = self.data,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\frame\test_to_csv.py,735,"df_dt.loc[30:50,1:3] = np.nan",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\groupby\test_categorical.py,838,self.cat.groupby(['value_group'])['value_group'].count().plot(kind='bar'),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\indexes\test_base.py,78,index = self.create_index(),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\indexing\test_coercion.py,85,temp.loc[1] = loc_value,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\indexing\multiindex\test_partial.py,169,"self.ymd.loc[2000, 0] = 0",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\io\excel\test_writers.py,964,"xlsaddrs = [""%s2"" % chr(i) for i in range(ord('A'), ord('H'))]",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\io\excel\test_writers.py,965,"xlsaddrs += [""A%s"" % i for i in range(1, 6)]",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\io\excel\test_writers.py,968,cell = ws.cell(xlsaddr),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\io\excel\test_writers.py,982,assert ws.cell(maddr).merged,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\resample\test_resample_api.py,187,ts2.resample('2s').mean().ffill(),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\pandas-master\pandas\tests\series\test_internals.py,173,r[0] = np.nan,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\compat_template.__init__.py,72,import tensorflow.compat.v2 as tf,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\compiler\tests\pooling_ops_test.py,325,x[np.random.choice(total_size)] = np.nan,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\compiler\tests\tensor_array_ops_test.py,770,"v0 = array_ops.identity(np.arange(3 * 5, dtype=np_dtype).reshape(3, 5))",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\compiler\tests\tensor_array_ops_test.py,832,"grad_val[0, :] + grad_val[1, :] + grad_val[2, :],",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\compiler\tests\tensor_array_ops_test.py,856,"dtype=dtypes.float32,",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\compiler\xla\python\xla_client_test.py,1296,"self.assertLess(np.linalg.norm(np.dot(a, v) - w * v), 1e-3)",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\lite\micro\examples\micro_speech\apollo3\captured_data_to_wav.py,21,import matplotlib.pyplot as plt,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\lite\micro\examples\micro_speech\apollo3\compare_1k.py,164,"plt.tight_layout(pad=0, w_pad=0.2, h_pad=0.2)",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\autograph\pyct\cache.py,54,cache[key][subkey] = value,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\debug\lib\session_debug_grpc_test.py,262,"self.assertAllClose(42.0, sess.run(w))",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\eager\core_test.py,648,"num_outputs=1,",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\eager\pywrap_tfe_test.py,322,"_ = ops.EagerTensor(t, device=ctx.device_name, dtype=None)",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\framework\importer_test.py,402,"self.assertEqual(list(self.evaluate(imported_shape)), [])",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\framework\importer_test.py,403,"self.assertEqual(list(self.evaluate(new_var_shape)), [])",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\framework\tensor_util_test.py,288,np.iinfo(np.int64).min = -9223372036854775808,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\grappler\cost_analyzer_test.py,132,self.assertTrue(lower <= upper),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\engine\compile_utils_test.py,315,(0 * .2 + 0 * .3 + 1 * .5 + 1 * 0) / 4,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\engine\compile_utils_test.py,332,(0 * .2 + 1 * .5) / 4,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\layers\gru_v2_test.py,203,"test_name, use_bias, bias_initializer, activation",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\layers\lstm_v2_test.py,505,"test_name, use_bias, bias_initializer, activation",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,22,outputs = tf.keras.layers.Dense(1)(x),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,23,"model = tf.keras.Model(inputs, outputs)",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,98,x = tf.keras.layers.Flatten()(x),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,99,outputs = tf.keras.layers.Dense(1)(x),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,100,"model = tf.keras.Model(inputs, outputs)",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,190,outputs = tf.keras.layers.Dense(1)(x),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,191,"model = tf.keras.Model(inputs, outputs)",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,285,model.add(tf.keras.layers.Dense(10)),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,286,model.add(tf.keras.layers.Dense(1)),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,343,"model.add(tf.keras.layers.Conv2D(32, (3, 3)))",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,344,model.add(tf.keras.layers.Flatten()),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,345,model.add(tf.keras.layers.Dense(1)),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,415,model.add(tf.keras.layers.LSTM(10)),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\keras\tests\get_config_samples.py,416,model.add(tf.keras.layers.Dense(1)),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\kernel_tests\clip_ops_test.py,513,"clip_by_norm(t, clip_norm * tf.compat.v1.to_float(tf.size(t)))",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\kernel_tests\parsing_ops_test.py,2158,b[1] = [],0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\kernel_tests\while_v2_test.py,623,"self.assertLen([n for n in g.node if n.op == ""Enter""], enter_count)",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\kernel_tests\while_v2_test.py,638,"self.assertLen([n for n in g.node if n.op == ""Enter""], enter_count)",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\kernel_tests\array_ops\scatter_nd_ops_test.py,268,"update0 = tf.compat.v1.scatter_nd_update(var, [[1]], [True])",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\kernel_tests\array_ops\scatter_nd_ops_test.py,272,self.evaluate(var.initializer),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\kernel_tests\array_ops\scatter_nd_ops_test.py,274,"self.assertAllEqual([False, True], self.evaluate(var))",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\kernel_tests\array_ops\scatter_nd_ops_test.py,279,"tf.scatter_nd_mul, tf.scatter_nd_div,",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\kernel_tests\array_ops\scatter_nd_ops_test.py,442,"tf.scatter_nd_mul, tf.scatter_nd_div,",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\ops\batch_norm_benchmark.py,50,batch_norm = (tensor - mean) * tf.math.rsqrt(variance + 0.001),0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\ops\standard_ops.py,101,from tensorflow.python.ops.state_ops import scatter_nd_mul,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\ops\standard_ops.py,102,from tensorflow.python.ops.state_ops import scatter_nd_div,0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\ops\linalg\linear_operator_circulant.py,204,"self.block_depth = 2,",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\ops\ragged\ragged_map_fn_op_test.py,61,"fn=self.stack_mean_and_sum,",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
C:\Users\zyt\Documents\VMWare Share\tensorflow-master\tensorflow\python\ops\ragged\ragged_map_ops.py,157,"out = tf.ragged.constant([[2, 3, 4], [5, 6], [7, 8]])",0,0,,"{'name': '8_2', 'severity': '', 'inspection_name': '8_2', 'attribute_key': ''}","{'TYPE': '', 'FQNAME': ''}",Do not use comment lines to make the code invalid.
